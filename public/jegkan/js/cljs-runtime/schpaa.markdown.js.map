{"version":3,"sources":["schpaa/markdown.cljs"],"mappings":";AAKA;;;8BAAA,9BAAMA,oEAEHC,KAAKC;AAFR,AAAA,0FAGG,EAAA,AAAAC,cAAQ,iBAAAC,mBAAI,AAAA,mFAAOF;AAAX,AAAA,oBAAAE;AAAAA;;AAAkB,OAAA,6FAAYF;;OACpC,2BAAA,2CAAA,IAAA,QAAA,IAAA,OAAA,KAAA,SAAA,IAAA,/GAACG,sBACCJ,0GAMFA,MAAMC;;AAEX,6BAAA,7BAAMI,kEAAYL,KAAKC;AAAvB,AAAA,0FACG,AAAcD,mBAAMC;;AAEvB,2CAAA,3CAAMK,8FAAWC;AAAjB,AACE,0IAAA,kEAAA,KAAA,mFAAA,sHAAA,4SAAA,2EAAA,1wBAACC,yEAAqBD,uSAEsBF,iIACI,6CAAA,7CAACI,gIAAMV,oCAAaW;;AAGtE,8BAAA,9BAAMC,oEAAUC;AAAhB,AAAA,0FAAA,mDAAA,2CAAA,2FAAA,2CAAA,wDAE2C,AAACC,0BAAWD","names":["schpaa.markdown/escape-html","text","state","cljs.core/not","or__4253__auto__","clojure.string/escape","schpaa.markdown/capitalize","schpaa.markdown/md->html'","content","markdown.core.md__GT_html_with_meta","cljs.core.into","markdown.transformers/transformer-vector","schpaa.markdown/md->html","md","markdown.core/md->html"],"sourcesContent":["(ns schpaa.markdown\n  (:require [shadow.resource :refer [inline]]\n            [markdown.core :as m]\n            [markdown.transformers :as mt]))\n\n(defn escape-html\n  \"Change special characters into HTML character entities.\"\n  [text state]\n  [(if-not (or (:code state) (:codeblock state))\n     (clojure.string/escape\n       text\n       {\\& \"&amp;\"\n        \\< \"&lt;\"\n        ;;\\> \"&gt;\"\n        \\\" \"&quot;\"\n        \\' \"&#39;\"})\n     text) state])\n\n(defn capitalize [text state]\n  [(.toUpperCase text) state])\n\n(defn md->html' [content]\n  (m/md->html-with-meta content\n                        :footnotes? true\n                        :custom-transformers [capitalize]\n                        :replacement-transformers (into [escape-html] mt/transformer-vector)\n                        :heading-anchors true))\n\n(defn md->html [md]\n  [:div {;:style {:white-space :pre-wrap}\n         :dangerouslySetInnerHTML {:__html (m/md->html md)}}])\n"]}